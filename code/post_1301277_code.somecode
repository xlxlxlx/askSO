<code>#include &lt;boost/algorithm/string.hpp&gt;

int main()
{
  std::string latlonStr = "hello,ergr()()rg(rg)";
  boost::find_format_all(latlonStr,boost::token_finder(boost::is_any_of("(,)")),boost::const_formatter(" "));
</code>
<code>1&gt;Compiling...
1&gt;mainTest.cpp
1&gt;c:\work\minescout-feat-000\extlib\boost\algorithm\string\detail\classification.hpp(102) : warning C4996: 'std::copy': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
1&gt;        c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility(2576) : see declaration of 'std::copy'
1&gt;        c:\work\minescout-feat-000\extlib\boost\algorithm\string\classification.hpp(206) : see reference to function template instantiation 'boost::algorithm::detail::is_any_ofF&lt;CharT&gt;::is_any_ofF&lt;boost::iterator_range&lt;IteratorT&gt;&gt;(const RangeT &amp;)' being compiled
1&gt;        with
1&gt;        [
1&gt;            CharT=char,
1&gt;            IteratorT=const char *,
1&gt;            RangeT=boost::iterator_range&lt;const char *&gt;
1&gt;        ]
1&gt;        c:\work\minescout-feat-000\minescouttest\maintest.cpp(257) : see reference to function template instantiation 'boost::algorithm::detail::is_any_ofF&lt;CharT&gt; boost::algorithm::is_any_of&lt;const char[4]&gt;(RangeT (&amp;))' being compiled
1&gt;        with
1&gt;        [
1&gt;            CharT=char,
1&gt;            RangeT=const char [4]
1&gt;        ]
</code>
<code>-D_SCL_SECURE_NO_WARNINGS
</code>
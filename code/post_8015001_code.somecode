<code>public double[] Ranges()
{
            var ranges = new double[_original.Height];

            for (int y = 0; y &lt; _original.Height; y++ )
            {
                ranges[y] = 0;
                var dx = new List&lt;int&gt;();
                int last = 0;
                int x = 0; 

                while (last == 0 &amp;&amp; x&lt;_original.Width)
                {
                    if (_bit[x, y])
                        last = x;
                    x++;
                }

                if (last == 0)
                {
                    ranges[y] = 0;
                    continue;
                }

                for (x = last; x&lt;_original.Width; x++)
                {
                    if (!_bit[x, y]) continue; 

                    if (last != x - 1)
                    {
                        dx.Add((x-last)+1);
                    }
                    last = x;
                }
                if (dx.Count &gt; 2)
                {
                    dx.Sort();
                    ranges[y] = dx[dx.Count / 2];
                    //ranges[y] = dx.Average();
                }
                else
                    ranges[y] = 0;
            }

        var maximum = ranges.Max();
        for (int i = 0; i &lt; ranges.Length; i++)
        {
            if (Math.Abs(ranges[i] - 0) &lt; 0.9)
                ranges[i] = maximum;
        }
        return ranges;
}
</code>
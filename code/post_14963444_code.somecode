<code> **in the script.js**
groupedList[aIndex].CATEGORY = existingCategory+'\n'+thisCategory;
groupedList[aIndex].CATEGORY = existingCategory+'&lt;br&gt;'+thisCategory;
</code>
<code>&lt;br&gt;</code>
<code>Instinct&lt;br&gt;Media
</code>
<code>Instinct
Media
</code>
<code>function qCtrl($scope, $filter, $http, $timeout){

    $scope.getCategories = function(){$http.post('quote.cfc?method=getCategories').success(function(data) { $scope.categories = data; });   }
    $scope.getClassifications = function(){$http.post('quote.cfc?method=getClassifications').success(function(data) {   $scope.classifications = data;  }); }
    $scope.getIndustries = function(){$http.post('quote.cfc?method=getIndustries').success(function(data) { $scope.industries = data;   }); }
    $scope.getKeywords = function(){$http.post('quote.cfc?method=getKeywords').success(function(data) { $scope.keywords = data; }); }
    $scope.getSources = function(){$http.post('quote.cfc?method=getSources').success(function(data) {   $scope.sources = data;  }); }

    $scope.getAllQuotes = function(){$http.post('quote.cfc?method=getAllQuotesJoined').success(function(data) { $scope.allQuotes = data;    }); }

    $scope.initScopes = function (){
        $scope.getCategories();
        $scope.getClassifications();
        $scope.getIndustries();
        $scope.getKeywords();
        $scope.getSources();
        $scope.getAllQuotes();
    }   
    $scope.initScopes();

    // SEARCH QUOTES
    $scope.filteredQuotes = $scope.allQuotes;
    $scope.search = {searchField:''};

    $scope.searchQuote = function(){
        var filter = $filter('filter');
        var searchCrit = $scope.search;
        var newlist = $scope.allQuotes;
        var groupedList = [];
        var idList = [];
        newlist = filter(newlist,{TESTQUOTE:searchCrit.searchField});
        for(i=0;i&lt;10;i++){
            aIndex = idList.contains(newlist[i].TESTIMONIALID);
            if(aIndex &gt;= 0){
                thisKeyword = newlist[i].KEYWORD;
                thisClassification = newlist[i].CLASSIFICATION;
                thisCategory = newlist[i].CATEGORY;
                existingKeyword = groupedList[aIndex].KEYWORD;
                existingClassification = groupedList[aIndex].CLASSIFICATION;
                existingCategory = groupedList[aIndex].CATEGORY;
                if(thisKeyword != '' &amp;&amp; existingKeyword.indexOf(thisKeyword) == -1){
                    groupedList[aIndex].KEYWORD = existingKeyword+' - '+thisKeyword;
                } 
                if(thisClassification != '' &amp;&amp; existingClassification.indexOf(thisClassification) == -1){
                    groupedList[aIndex].CLASSIFICATION = existingClassification+' \n '+thisClassification;
                } 
                if(thisCategory != '' &amp;&amp; existingCategory.indexOf(thisCategory) == -1){
                    groupedList[aIndex].CATEGORY = existingCategory+'&lt;br&gt;'+thisCategory;
                }               
            } else {
                idList.push(newlist[i].TESTIMONIALID);
                groupedList.push(newlist[i]);
            }
        }
        $scope.filteredQuotes = groupedList;
      }
}
Array.prototype.contains = function ( needle ) {
   for (j in this) {
       if (this[j] == needle) return j;
   }
   return -1;
}
</code>
<code>&lt;div ng-repeat="q in filteredQuotes" class="well clearfix"&gt;
                        &lt;h3&gt;{{q.TITLE}}&lt;/h3&gt;
                        &lt;div class="row-fluid" style="margin-bottom:5px;"&gt;
                            &lt;div class="span3 well-small whBG"&gt;&lt;h4&gt;Classification&lt;/h4&gt;{{q.CLASSIFICATION}}&lt;/div&gt;
                            &lt;div class="span3 well-small whBG pipeHolder"&gt;&lt;h4&gt;Categories&lt;/h4&gt;{{q.CATEGORY}}&lt;/div&gt;
                            &lt;div class="span3 well-small whBG"&gt;&lt;h4&gt;Key Words&lt;/h4&gt;{{q.KEYWORD}}&lt;/div&gt;
                            &lt;div class="span3 well-small whBG"&gt;&lt;h4&gt;Additional&lt;/h4&gt;Industry = {{q.INDUSTRY}}&lt;br&gt;Source = {{q.SOURCE}}&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="well whBG"&gt;{{q.TESTQUOTE}}&lt;/div&gt;
                        &lt;div class="tiny"&gt;
                            Source comment : {{q.SOURCECOMMENT}}&lt;br&gt;
                            Additional Comment : {{q.COMMENT}}
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
</code>